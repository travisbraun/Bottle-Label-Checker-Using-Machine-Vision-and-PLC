"use strict";var TcHmi;!function(TcHmi){!function(Controls){!function(Beckhoff){class TcHmiSpinboxInput extends TcHmi.Controls.Beckhoff.TcHmiNumericInput{static#tchmiFQN="TcHmi.Controls.Beckhoff."+this.name;constructor(element,pcElement,attrs){super(element,pcElement,attrs),this.__evtHandlerPointerClickPlus=this.__onButtonPlus(),this.__evtHandlerPointerClickMinus=this.__onButtonMinus(),this.__evtHandlerPointerDownPlus=this.__onPointerDownButtonPlus(),this.__evtHandlerPointerDownMinus=this.__onPointerDownButtonMinus(),this.__evtHandlerDocumentPointerUp=this.__onMouseUp(),this.__evtHandlerContextMenu=this.__onContextMenu()}__elementButtonContainerStart;__elementButtonContainerEnd;__inputBackgroundColor;__buttonPlus;__buttonMinus;__autoStep;__autoStepTimeStamp=0;__isPressed=!1;__intervalTimer=0;__evtHandlerPointerClickPlus;__evtHandlerPointerClickMinus;__evtHandlerPointerDownPlus;__evtHandlerPointerDownMinus;__evtHandlerDocumentPointerUp;__evtHandlerContextMenu;__step;__stepInit;__buttonPosition;__previnit(){if(super.__previnit(),this.__elementButtonContainerStart=this.__elementTemplateRoot.getElementsByClassName("TcHmi_Controls_Beckhoff_TcHmiSpinboxInput-template-button-before")[0],this.__elementButtonContainerEnd=this.__elementTemplateRoot.getElementsByClassName("TcHmi_Controls_Beckhoff_TcHmiSpinboxInput-template-button-after")[0],!this.__elementButtonContainerStart||!this.__elementButtonContainerEnd)throw new Error("Invalid Template.html")}__init(){super.__init()}__attach(){super.__attach();const passiveEventOptions={passive:!0,capture:!1};this.__processButtonPosition(),this.__buttonPlus&&(this.__buttonPlus.addEventListener("click",this.__evtHandlerPointerClickPlus,passiveEventOptions),this.__buttonPlus.addEventListener("pointerdown",this.__evtHandlerPointerDownPlus,passiveEventOptions),this.__buttonPlus.addEventListener("contextmenu",this.__evtHandlerContextMenu)),this.__buttonMinus&&(this.__buttonMinus.addEventListener("click",this.__evtHandlerPointerClickMinus,passiveEventOptions),this.__buttonMinus.addEventListener("pointerdown",this.__evtHandlerPointerDownMinus,passiveEventOptions),this.__buttonMinus.addEventListener("contextmenu",this.__evtHandlerContextMenu))}__detach(){super.__detach(),this.__intervalTimer&&(clearInterval(this.__intervalTimer),this.__intervalTimer=0);const passiveEventOptions={passive:!0,capture:!1};this.__buttonPlus&&(this.__buttonPlus.removeEventListener("click",this.__evtHandlerPointerClickPlus,passiveEventOptions),this.__buttonPlus.removeEventListener("pointerdown",this.__evtHandlerPointerDownPlus,passiveEventOptions),this.__buttonPlus.removeEventListener("contextmenu",this.__evtHandlerContextMenu)),this.__buttonMinus&&(this.__buttonMinus.removeEventListener("click",this.__evtHandlerPointerClickMinus,passiveEventOptions),this.__buttonMinus.removeEventListener("pointerdown",this.__evtHandlerPointerDownMinus,passiveEventOptions),this.__buttonMinus.removeEventListener("contextmenu",this.__evtHandlerContextMenu))}destroy(){this.__keepAlive||super.destroy()}__onResize=()=>{this.__processButtonPosition(),this.__processContentPadding()};__createAndAppendButtons(){switch(this.__buttonPlus||(this.__buttonPlus=document.createElement("div"),this.__buttonPlus.classList.add("button","button-plus")),this.__buttonMinus||(this.__buttonMinus=document.createElement("div"),this.__buttonMinus.classList.add("button","button-minus")),this.__buttonPosition){case"BothLeft":this.__elementButtonContainerStart.append(this.__buttonPlus,this.__buttonMinus);break;case"PlusLeftAndMinusRight":case"PlusTopAndMinusBottom":this.__elementButtonContainerStart.append(this.__buttonPlus),this.__elementButtonContainerEnd.append(this.__buttonMinus);break;case"BothRight":this.__elementButtonContainerEnd.append(this.__buttonPlus,this.__buttonMinus);break;default:this.__elementButtonContainerStart.append(this.__buttonMinus),this.__elementButtonContainerEnd.append(this.__buttonPlus)}this.__elementTemplateRoot.classList.toggle("both-left","BothLeft"===this.__buttonPosition),this.__elementTemplateRoot.classList.toggle("plus-left-minus-right","PlusLeftAndMinusRight"===this.__buttonPosition),this.__elementTemplateRoot.classList.toggle("both-right","BothRight"===this.__buttonPosition),this.__elementTemplateRoot.classList.toggle("minus-left-plus-right","MinusLeftAndPlusRight"===this.__buttonPosition),this.__elementTemplateRoot.classList.toggle("plus-top-minus-bottom","PlusTopAndMinusBottom"===this.__buttonPosition),this.__elementTemplateRoot.classList.toggle("minus-top-plus-bottom","MinusTopAndPlusBottom"===this.__buttonPosition)}__executeStep(direction){if(!this.__elementInput.value.trim())return this.__resetToLastValidValue&&this.__setValue(this.__lastValidValue),void TcHmi.EventProvider.raise(this.__id+".onUserInteractionFinished");let newValue,currentValue,notNumberOrBigInt=!1;switch(this.__valueType){case"BigInt64":case"UnsignedBigInt64":try{currentValue=BigInt(this.__elementInput.value)}catch{notNumberOrBigInt=!0}break;default:currentValue=Number(this.__elementInput.value),notNumberOrBigInt=isNaN(currentValue)}if(notNumberOrBigInt)return this.__resetToLastValidValue&&this.__setValue(this.__lastValidValue),void TcHmi.EventProvider.raise(this.__id+".onUserInteractionFinished");"number"==typeof currentValue&&"number"==typeof this.__step?newValue="decrement"===direction?currentValue-(this.__step??1):currentValue+(this.__step??1):"bigint"==typeof currentValue&&"bigint"==typeof this.__step&&(newValue="decrement"===direction?currentValue-(this.__step??1n):currentValue+(this.__step??1n)),null!==this.__internalMinValue&&void 0!==this.__internalMinValue&&void 0!==newValue&&newValue<this.__internalMinValue&&"increment"===direction&&(newValue=this.__internalMinValue),null!==this.__internalMaxValue&&void 0!==this.__internalMaxValue&&void 0!==newValue&&newValue>this.__internalMaxValue&&"decrement"===direction&&(newValue=this.__internalMaxValue),(null===this.__internalMaxValue||void 0!==newValue&&newValue<=this.__internalMaxValue)&&(null===this.__internalMinValue||void 0!==newValue&&newValue>=this.__internalMinValue)?this.__setValue(newValue):this.__resetToLastValidValue&&this.__setValue(this.__lastValidValue),TcHmi.EventProvider.raise(this.__id+".onUserInteractionFinished")}__onButtonPlus(){return evt=>{0===evt.button&&(this.__isReadOnly||this.__autoStep||this.__executeStep("increment"))}}__onButtonMinus(){return evt=>{0===evt.button&&(this.__isReadOnly||this.__autoStep||this.__executeStep("decrement"))}}__onPointerDownButtonPlus(){return evt=>{if(0!==evt.button)return;if(this.__isReadOnly)return;if(this.__isPressed)return;const timestamp=evt.timeStamp;this.__autoStepTimeStamp=evt.timeStamp,document.addEventListener("pointerup",this.__evtHandlerDocumentPointerUp,{passive:!0,once:!0}),this.__buttonPlus?.classList.add("down"),this.__autoStep&&(this.__elementInput.blur(),this.__executeStep("increment"),this.__isPressed=!0,setTimeout((()=>{clearInterval(this.__intervalTimer),this.__intervalTimer=setInterval((()=>{this.__isPressed&&timestamp===this.__autoStepTimeStamp?this.__executeStep("increment"):clearInterval(this.__intervalTimer)}),150)}),300))}}__onPointerDownButtonMinus(){return evt=>{if(0!==evt.button)return;if(this.__isReadOnly)return;if(this.__isPressed)return;const timestamp=evt.timeStamp;this.__autoStepTimeStamp=evt.timeStamp,document.addEventListener("pointerup",this.__evtHandlerDocumentPointerUp,{passive:!0,once:!0}),this.__buttonMinus?.classList.add("down"),this.__autoStep&&(this.__elementInput.blur(),this.__executeStep("decrement"),this.__isPressed=!0,setTimeout((()=>{clearInterval(this.__intervalTimer),this.__intervalTimer=setInterval((()=>{this.__isPressed&&timestamp===this.__autoStepTimeStamp?this.__executeStep("decrement"):clearInterval(this.__intervalTimer)}),150)}),300))}}__onMouseUp(){return evt=>{0===evt.button&&(this.__isPressed=!1,this.__buttonPlus?.classList.remove("down"),this.__buttonMinus?.classList.remove("down"),clearInterval(this.__intervalTimer),this.__intervalTimer=0)}}__onContextMenu(){return event=>{event.cancelable&&event.preventDefault()}}__processValueType(){super.__processValueType(),this.__attributesInitialized?void 0!==this.__step&&this.setStep(this.__step):void 0!==this.__stepInit&&this.setStep(this.__stepInit)}setStep(valueNew){if(!this.__attributesInitialized&&!this.__valueType)return void(this.__stepInit=valueNew);let convertedValue;switch(this.__valueType){case"BigInt64":convertedValue=TcHmi.ValueConverter.toBigInt64(valueNew),null===convertedValue&&(convertedValue=TcHmi.ValueConverter.toBigInt64(this.getAttributeDefaultValueInternal("Step")));break;case"UnsignedBigInt64":convertedValue=TcHmi.ValueConverter.toUnsignedBigInt64(valueNew),null===convertedValue&&(convertedValue=TcHmi.ValueConverter.toUnsignedBigInt64(this.getAttributeDefaultValueInternal("Step")));break;default:convertedValue=TcHmi.ValueConverter.toNumber(valueNew),null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("Step"))}convertedValue!==this.__step&&(this.__step=convertedValue,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"Step"}),this.__processStep())}getStep(){return this.__step}__processStep(){this.__processValue()}setButtonPosition(valueNew){let convertedValue=TcHmi.ValueConverter.toString(valueNew);if(null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("ButtonPosition")),convertedValue!==this.__buttonPosition){switch(convertedValue){case"BothLeft":case"BothRight":case"PlusLeftAndMinusRight":case"PlusTopAndMinusBottom":case"MinusTopAndPlusBottom":this.__buttonPosition=convertedValue;break;default:this.__buttonPosition="MinusLeftAndPlusRight"}TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"ButtonPosition"}),this.__processButtonPosition()}}getButtonPosition(){return this.__buttonPosition}__processButtonPosition(){if(this.__isAttached)if(this.__createAndAppendButtons(),"Right"===this.__unitPosition)switch(this.__buttonPosition){case"BothLeft":case"MinusTopAndPlusBottom":case"PlusTopAndMinusBottom":this.__elementUnit.style.marginRight="0";break;default:this.__elementUnit.style.marginRight=(this.__buttonMinus?.getBoundingClientRect().width??26)+"px"}else switch(this.__buttonPosition){case"BothRight":case"MinusTopAndPlusBottom":case"PlusTopAndMinusBottom":this.__elementUnit.style.marginLeft="0";break;default:this.__elementUnit.style.marginLeft=(this.__buttonMinus?.getBoundingClientRect().width??26)+"px"}}__processUnitPosition(){super.__processUnitPosition(),this.__processButtonPosition()}setInputBackgroundColor(valueNew){let convertedValue=TcHmi.ValueConverter.toObject(valueNew);null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("InputBackgroundColor"));let resolverInfo=this.__objectResolvers.get("inputBackgroundColor");resolverInfo&&(resolverInfo.watchDestroyer&&resolverInfo.watchDestroyer(),resolverInfo.resolver.destroy());let resolver=new TcHmi.Symbol.ObjectResolver(convertedValue,this);this.__objectResolvers.set("inputBackgroundColor",{resolver:resolver,watchCallback:this.__onResolverForInputBackgroundColorWatchCallback,watchDestroyer:resolver.watch(this.__onResolverForInputBackgroundColorWatchCallback)})}__onResolverForInputBackgroundColorWatchCallback=data=>{this.__isAttached||this.__suspendObjectResolver("inputBackgroundColor"),data.error===TcHmi.Errors.NONE?tchmi_equal(data.value,this.__inputBackgroundColor)||(this.__inputBackgroundColor=data.value,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"InputBackgroundColor"}),this.__processInputBackgroundColor()):TcHmi.Log.errorEx("[Source=Control, Module="+this.__type+(TcHmiSpinboxInput.#tchmiFQN!==this.__type?", Origin="+TcHmiSpinboxInput.#tchmiFQN:"")+", Id="+this.getId()+", Attribute=InputBackgroundColor] Resolving symbols from object failed with error: "+TcHmi.Log.buildMessage(data.details))};getInputBackgroundColor(){return this.__inputBackgroundColor}__processInputBackgroundColor(){TcHmi.StyleProvider.processBackgroundColor(this.__elementInput,this.__inputBackgroundColor)}setAutoStep(valueNew){let convertedValue=TcHmi.ValueConverter.toBoolean(valueNew);null===convertedValue&&(convertedValue=this.getAttributeDefaultValueInternal("AutoStep")),convertedValue!==this.__autoStep&&(this.__autoStep=convertedValue,TcHmi.EventProvider.raise(this.__id+".onPropertyChanged",{propertyName:"AutoStep"}),this.__processAutoStep())}getAutoStep(){return this.__autoStep}__processAutoStep(){}}Beckhoff.TcHmiSpinboxInput=TcHmiSpinboxInput}(Controls.Beckhoff||(Controls.Beckhoff={}))}(TcHmi.Controls||(TcHmi.Controls={}))}(TcHmi||(TcHmi={})),TcHmi.Controls.registerEx("TcHmiSpinboxInput","TcHmi.Controls.Beckhoff",TcHmi.Controls.Beckhoff.TcHmiSpinboxInput);