"use strict";let request=null,ready=!1,error=!1,db=null,cacheInterval=1e3,cache=[],cacheInProcess=!1,maxEntries=5e3;function onCacheTick(){processCache()}function processCache(){if(!db)return;if(cacheInProcess)return;cacheInProcess=!0;let ta=null;try{ta=db.transaction(["data"],"readwrite")}catch(e){ready=!1,error=!0,cacheInProcess=!1,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception:\n",args:[e]}})}if(!ta)return;let os=null;try{os=ta.objectStore("data")}catch(e){ready=!1,error=!0,cacheInProcess=!1,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception:\n",args:[e]}})}if(!os)return;let count=null;try{count=os.count()}catch(e){self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception:\n",args:[e]}}),ready=!1,error=!0,cacheInProcess=!1}count&&(count.onsuccess=e=>{let cc=cache;cache=[];let count=e.target.result;if(count+cc.length>maxEntries){let cdel=count+cc.length-maxEntries;if(cdel>count)for(cdel=count;cc.length>maxEntries;)cc.shift();let cdone=0,cursor=null;try{cursor=os.openCursor()}catch(e){ready=!1,error=!0,cacheInProcess=!1,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception:\n",args:[e]}})}if(!cursor)return;cursor.onerror=e=>{ready=!1,error=!0,cacheInProcess=!1,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception:\n",args:[e]}})},cursor.onsuccess=e=>{let cursor=e.target.result;if(cursor){if(cdone<cdel)return cdone++,cursor.delete(),void cursor.continue();if(cc)for(;cc.length>0;)os.add(cc.shift());cacheInProcess=!1}}}else{if(cc)for(;cc.length>0;)os.add(cc.shift());cacheInProcess=!1}})}function run(options){if(maxEntries=options.maxEntries??2e4,cacheInterval=options.cacheInterval??1e3,indexedDB){try{request=indexedDB.open("TcHmi.Log")}catch(e){ready=!1,error=!0,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception while opening database:\n",args:[e]}})}request&&(request.onerror=e=>{ready=!1,error=!0,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of request.onerror:\n",args:[e]}})},request.onsuccess=()=>{request&&(db=request.result,ready=!0,setInterval(onCacheTick,cacheInterval))},request.onupgradeneeded=e=>{db=e.target.result;try{db.createObjectStore("data",{keyPath:"id",autoIncrement:!0}),ready=!0,setInterval(onCacheTick,cacheInterval)}catch(e){ready=!1,error=!0,self.postMessage({event:"error",args:{message:"[Source=Framework, Module=WebWorker.Log.IndexedDB.js] Persistent logging failed because of unexpected exception in request.onupgradeneeded event handler:\n",args:[e]}})}})}}function add(entry){cache.push(entry)}self.addEventListener("message",(function(messageEvent){let message=messageEvent.data;if(message)switch(message.command){case"run":run(message.options);break;case"add":add(message.entry);break;case"force":processCache()}}));